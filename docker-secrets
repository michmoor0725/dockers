Two common ways to supply secrets with Docker/Compose
A) .env + environment: (simple, what you’re doing now)

Put values in a local .env file (never commit it).

Reference them in docker-compose.yml with ${VARS} under environment:.

Pros: dead simple, works everywhere.

Cons: values end up as container environment variables (visible via docker inspect, logs, and to any process inside the container).

# The .env file must be in the same folder as compose file

# .env
ADMIN_PASSWORD=shotokan1


#####
Compose file
# docker-compose.yml (non-swarm)
services:
  checkmk:
    image: checkmk/check-mk-raw:2.4.0-latest
    environment:    <----environment section under the service 
      CMK_PASSWORD: ${ADMIN_PASSWORD}  <---variable

###############################
Two valid ways to write environment
1. Mapping style (recommended — uses :)

environment:
  CMK_PASSWORD: ${ADMIN_PASSWORD}
  TZ: UTC
  CMK_SITE_ID: atlanta
  CMK_LIVESTATUS_TCP: "on"

Always use : with a space after.
Quotes ("on") protect against YAML interpreting it as a boolean.

2. List style (uses KEY=VALUE)

Older style, but still works:
environment:
  - CMK_PASSWORD=${ADMIN_PASSWORD}
  - TZ=UTC
  - CMK_SITE_ID=atlanta
  - CMK_LIVESTATUS_TCP=on
