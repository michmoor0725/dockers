---
global:
  scrape_interval: 15s

scrape_configs:
  # Prometheus itself
  - job_name: prometheus
    scrape_interval: 5s
    static_configs:
      - targets:
          - localhost:9090

  # UptimeKuma metric scraping
  - job_name: "uptime"
    scrape_interval: 30s
    scheme: http
    metrics_path: "/metrics"
    static_configs:
      - targets: ["192.168.4.5:3001","100.114.5.123:3001"]

  # Node exporter (your host + others)
  - job_name: node_exporter
    static_configs:
      - targets:
          - node_exporter:9100
          - 192.168.50.198:9100 #graylog
          - 192.168.50.223:9100 #netadmin
          - 192.168.3.3:9100 #gafsvr1
          - 192.168.15.24:9100 #bitwarden
          - 192.168.15.25:9100 #nextcloud
        labels:
          device: docker-host

  # cAdvisor (containers on this host)
  - job_name: cadvisor
    static_configs:
      - targets:
          - cadvisor:8080
        labels:
          device: docker-host

  # traefik reverse proxy - external service
  - job_name: traefik-external
    scrape_interval: 10s
    scrape_timeout: 5s
    static_configs:
      - targets: ['192.168.2.5:8082']  # <-- Replace with your Traefik host IP
        labels:
          instance_name: traefik-external

  # scraping local WUD instance
  - job_name: 'wud'
    metrics_path: /metrics
    static_configs:
      - targets: ['192.168.50.251:3004']

  - job_name: 'watchtower'
    scrape_interval: 30s
    metrics_path: /v1/metrics
    bearer_token: SuperSecret123
    static_configs:
      - targets:
          - '192.168.50.251:8899'
        labels:
          env: production
          os: docker
          device: docker-host
             
        

  # SNMP via snmp_exporter
  # Per-target module via label; duplicate a target to scrape with multiple modules.
  - job_name: snmp
    scrape_interval: 60s
    scrape_timeout: 50s
    metrics_path: /snmp
    params:
      auth: [my_v2]   # NAME from snmp.yml 'auths:' (not the community string)
    static_configs:
      # Default: if_mib for these
      - targets:
          - 192.168.3.3
          - 192.168.3.2
          - 192.168.69.35
          - 192.168.69.36
          - 192.168.69.37
          - 192.168.50.199
          - 192.168.69.1
          - 192.168.69.31
          - 192.168.15.24

        labels:
          module: if_mib

      # 192.168.50.199 also scraped with 'dell'
      - targets:
          - 192.168.50.199
        labels:
          module: dell

      # UniFi devices with the 'ubiquiti_unifi' module
      - targets:
          - 192.168.69.35 # poe switch
          - 192.168.69.36 #basement AP
          - 192.168.69.37 #hallway AP
          - 192.168.69.1 #unifi controller
          - 192.168.69.31 #core switch
        labels:
          module: ubiquiti_unifi

     # Synology devices with the 'synology' module
      - targets:
          - 192.168.3.3
          - 192.168.3.2
        labels:
          module: synology


    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [module]
        target_label: __param_module
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 192.168.50.251:9116   # or use snmp_exporter:9116 if you prefer container DNS
