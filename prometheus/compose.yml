---
## compose file stored in portainer volume
## /var/lib/docker/volumes/portainer_data/_data/compose

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=30d
      - --storage.tsdb.retention.size=2GB
      - --web.enable-lifecycle
    volumes:
      - /home/michael/projects/dockers/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - /home/michael/projects/dockers/prometheus/data/prometheus:/prometheus

    labels:
      - "wud.watch=false"
      - "com.centurylinklabs.watchtower.enable=false"

    networks:
      - monitoring
    logging:
      driver: loki
      options:
        loki-url: https://loki.networkingtitan.com/loki/api/v1/push
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: non-blocking
  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.9.1
    container_name: node_exporter
    command: --path.rootfs=/host
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
    networks:
      - monitoring
    labels:
     - "wud.watch=false"
     - "com.centurylinklabs.watchtower.enable=false"
    logging:
      driver: loki
      options:
        loki-url: https://loki.networkingtitan.com/loki/api/v1/push
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: non-blocking
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.1
    container_name: cadvisor
    ports:
      - 8089:8080
    volumes:
      - /:/rootfs:ro
      - /run:/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped
    networks:
      - monitoring
    labels:
     - "wud.watch=false"
     - "com.centurylinklabs.watchtower.enable=false"
    logging:
      driver: loki
      options:
        loki-url: https://loki.networkingtitan.com/loki/api/v1/push
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: non-blocking
  snmp_exporter:
    image: prom/snmp-exporter:latest
    container_name: snmp_exporter
    restart: unless-stopped
    ports:
      - 9116:9116
      - 161:161/udp
    volumes:
      - /home/michael/projects/dockers/prometheus/snmp.yml:/etc/snmp_exporter/snmp.yml:ro
    networks:
      - monitoring
    labels:
     - "wud.watch=false"
     - "com.centurylinklabs.watchtower.enable=false"
    logging:
      driver: loki
      options:
        loki-url: https://loki.networkingtitan.com/loki/api/v1/push
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: non-blocking
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3006:3000
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: shotokan1
       # --- Authentik (Generic OAuth) ---
      GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
      GF_AUTH_GENERIC_OAUTH_NAME: "Authentik"
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "FxKtZvFD7vAccs3OFWEFCKy5iQ506Otzr9jw8MaC"
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "Hr83qLhKt5I3KcFXSiskVjtdvKY2zwzceJxLehiYZWjdM2lH5OnbZevrpo8M3cKQLEpa8SjS5ph6G6YUnKPaBKc0e1BBxWM2e2Q0obp7h3M8e4wGe57XziZcnkvpeHHG"

      GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email groups ak_entitlements"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://authentik.networkingtitan.com/application/o/authorize/
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://authentik.networkingtitan.com/application/o/token/
      GF_AUTH_GENERIC_OAUTH_API_URL: https://authentik.networkingtitan.com/application/o/userinfo/

      GF_AUTH_GENERIC_OAUTH_EMAIL_ATTRIBUTE_PATH: email
      GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH: email
      GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH: name
      # Org role: Admin only if in grafana-admins; else Viewer
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups, 'grafana-admins') && 'Admin' || contains(entitlements, 'urn:goauthentik.io:group:grafana-admins') && 'Admin' || 'Viewer'"
      # Org defaults for new users
      GF_USERS_AUTO_ASSIGN_ORG: "true"
      GF_USERS_AUTO_ASSIGN_ORG_ROLE: "Viewer"
      GF_AUTH_GENERIC_OAUTH_ALLOW_ASSIGN_GRAFANA_ADMIN: "true"
      GF_AUTH_GENERIC_OAUTH_GRAFANA_ADMIN_ROLE_ATTRIBUTE_PATH: "contains(groups,'grafana-admins') || contains(entitlements,'urn:goauthentik.io:group:grafana-admins')"
      GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: "true"
      GF_AUTH_GENERIC_OAUTH_SKIP_ORG_ROLE_SYNC: "false"
      GF_AUTH_OAUTH_AUTO_LOGIN: "true"
      GF_AUTH_SIGNOUT_REDIRECT_URL: https://authentik.networkingtitan.com/application/o/grafana/end-session/
      GF_SERVER_ROOT_URL: https://grafana.networkingtitan.com
    volumes:
      - /home/michael/projects/dockers/prometheus/grafana/data:/var/lib/grafana
    networks:
      - monitoring
    labels:
     - "wud.watch=false"
     - "com.centurylinklabs.watchtower.enable=false"
    logging:
      driver: loki
      options:
        loki-url: https://loki.networkingtitan.com/loki/api/v1/push
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: non-blocking
  loki:
    image: grafana/loki:latest
    container_name: loki
    command:
      - -config.file=/etc/loki/config.yaml
    ports:
      - 3100:3100
    volumes:
      - /home/michael/projects/dockers/prometheus/loki_config/config.yaml:/etc/loki/config.yaml:ro
      - data_loki:/loki:rw
    restart: unless-stopped
    networks:
      - monitoring
    labels:
     - "wud.watch=false"
     - "com.centurylinklabs.watchtower.enable=false"
  influxdb:
    container_name: influxdb
    image: docker.io/library/influxdb:2.7.12-alpine
    ports:
      - 8086:8086
    volumes:
      - type: bind
        source: /home/michael/projects/dockers/prometheus/influxdb-data
        target: /var/lib/influxdb2
      - type: bind
        source: /home/michael/projects/dockers/prometheus/influxdb2/influxdb2
        target: /etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=shotokan1
      - DOCKER_INFLUXDB_INIT_ORG=networkingtitan
      - DOCKER_INFLUXDB_INIT_BUCKET=networktitan_bucket
    logging:
      driver: loki
      options:
        loki-url: https://loki.networkingtitan.com/loki/api/v1/push
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: non-blocking
    restart: unless-stopped
    networks:
      - monitoring
    labels:
     - "wud.watch=false"
     - "com.centurylinklabs.watchtower.enable=false"
networks:
  monitoring:
    driver: bridge
volumes:
  data_loki:
    driver: local
